df$longitude, df$age, df$vfatcount, df$accday, df$accmon,
df$caseyear,df$accdate, df$modelyr, df$make,
df$dridistract1, df$dridistract2, df$dridistract3),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
colnames(fataldf) <- c("casenum", "statenum", "vehnum","pernum", "citynum", "countynum", "lat", "long", "age", "numfatalveh", "day", "month",
"year","date", "modelyr", "make", "dridistract1", "dridistract2", "dridistract3")
#START Getting Date to be a Date
fataldf$date <- df$accdate
fataldf$date <-format.POSIXct(fataldf$date, format = "%m/%Y")
#END
#Fixing city and county as num
fataldf$citynum <- as.integer(fataldf$citynum)
fataldf$countynum <- as.integer(fataldf$countynum)
fataldf$lat <- as.character(fataldf$lat)
fataldf$long <- as.character(fataldf$long)
fataldf$age <- as.integer(fataldf$age)
fataldf <- unique(fataldf)
#removes error coded ages and sets them to NA so that the person is still counted
fataldf <- fataldf[fataldf$age < 997,]
return(fataldf)
}
fatal_16na <- fatal_YYnasetup(FARS_16, 2016)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
fatal_16na <- fatal_YYnasetup(FARS_16, 2016)
fatal_16 <- fatal_YYsetup(FARS_16, 2016)
findingCellCases <- function(df, YY) {
#df = fatal_YY
#YY = case year
setupfataldis <- function(df) {
setupdrf <- function(df){
#5 = Talking or listening to cell phone
#6 = While dialing Cell phone
#15 = Other cell phone distraction
df$cellphoneuse <- ifelse(df$dridistract1 == 5, 1,
ifelse(df$dridistract2 == 5, 1,
ifelse(df$dridistract3 == 5, 1,
ifelse(df$dridistract1 == 6, 1,
ifelse(df$dridistract2 == 6, 1,
ifelse(df$dridistract3 == 6, 1,
ifelse(df$dridistract1 == 15, 1,
ifelse(df$dridistract2 == 15, 1,
ifelse(df$dridistract3 == 15, 1, 0)))))))))
drop <- c("citynum","countynum","lat","long","dridistract1", "dridistract2","dridistract3")
df = df[,!(names(df) %in% drop)]
return(df)
}
fataldisYY <- setupdrf(df)
return(fataldisYY)
}
fataldisYY <- setupfataldis(df)
return(fataldisYY)
}
fatal_16nads <- findingCellCases(fatal_16na, 16)
fatal_16ds <- findingCellCases(fatal_16, 16)
findingDuplicateCases <- function(df) {
#df = casedf
ndf <- df
ndf$duplicate <- "no"
lengthcases <- length(df$casenum)
rownames(df) <- c(1:length(df$casenum))
i = 1
for (w in 2:lengthcases) {
testrow <- ndf[i,]
if (w != i){
comparerow <- df[w,]
if (testrow[1,1] == comparerow[1,1]) {
if(testrow[1,2] == comparerow[1,2]){
ndf[i,]$duplicate <- "yes"
ndf[w,]$duplicate <- "yes"
} else {
if (ndf[i,]$duplicate == "yes") {
ndf[i,]$duplicate == "yes"
} else {
ndf[i,]$duplicate <- "no"
}
}
} else {
if (ndf[i,]$duplicate == "yes") {
ndf[i,]$duplicate == "yes"
} else {
ndf[i,]$duplicate <- "no"
}
}
} else {
next
}
i = i + 1
} #close for loop
return(ndf)
}
fatal_16nads <- findingDuplicateCases(fatal_16nads)
fatal_16ds <- findingDuplicateCases(fatal_16ds)
yesnadf <- function(df) {
ydf <- df[df$duplicate == "yes",]
drop <- c("duplicate","pernum")
ydf = ydf[,!(names(ydf) %in% drop)]
ydf$casestateveh <- paste(ydf$casenum,ydf$statenum,ydf$vehnum, sep = "")
ndf <- data.frame(casenum = numeric(), statenum = numeric(), vehnum = numeric(), persontotal = numeric(),
agemin = numeric(), agemax = numeric(),
numfatal = numeric(), day = numeric(), month = numeric(),
year = numeric(), date = character(), modelyear = numeric(), make = numeric(), cellphoneuse = numeric())
caselist <- unique(ydf$casestateveh)
for (i in caselist) {
cdf <- ydf[ydf$casestateveh == i,]
pt <- length(cdf$casenum)
cr <- cdf
drop <- "age"
cr = cr[,!(names(cr) %in% drop)]
cr <- unique(cr)
cdf <- cdf[!is.na(cdf$age),]
if (length(cdf$age) == 0){
minage <- NA
maxage <- NA
} else {
if (length(cdf$age) > 0 & length(cdf$age) < 2) {
minage <- cdf$age
maxage <- cdf$age
}  else {
minage <- min(cdf$age)
maxage <- max(cdf$age)
}
}
ndf <- rbind(ndf, data.frame(casenum = cr[1,1], statenum = cr[1,2], vehnum = cr[1,3],
persontotal = pt, agemin = minage, agemax = maxage, numfatal = cr[1,4],
day = cr[1,5], month = cr[1,6], year = cr[1,7], date = cr[1,8],
modelyear = cr[1,9], make = cr[1,10], cellphoneuse = cr[1,11]))
}
return(ndf)
}
yesdf16na <- yesnadf(fatal_16nads)
yesdf <- function(df) {
ydf <- df[df$duplicate == "yes",]
drop <- c("duplicate","pernum")
ydf = ydf[,!(names(ydf) %in% drop)]
ydf$casestateveh <- paste(ydf$casenum,ydf$statenum,ydf$vehnum, sep = "")
ndf <- data.frame(casenum = numeric(), statenum = numeric(), vehnum = numeric(), persontotal = numeric(),
agemin = numeric(), agemax = numeric(),
numfatal = numeric(), day = numeric(), month = numeric(),
year = numeric(), date = character(), modelyear = numeric(), make = numeric(), cellphoneuse = numeric())
caselist <- unique(ydf$casestateveh)
for (i in caselist) {
cdf <- ydf[ydf$casestateveh == i,]
pt <- length(cdf$casenum)
cr <- cdf
drop <- "age"
cr = cr[,!(names(cr) %in% drop)]
cr <- unique(cr)
minage <- min(cdf$age)
maxage <- max(cdf$age)
ndf <- rbind(ndf, data.frame(casenum = cr[1,1], statenum = cr[1,2], vehnum = cr[1,3],
persontotal = pt, agemin = minage, agemax = maxage, numfatal = cr[1,4],
day = cr[1,5], month = cr[1,6], year = cr[1,7], date = cr[1,8],
modelyear = cr[1,9], make = cr[1,10], cellphoneuse = cr[1,11]))
}
return(ndf)
}
yesdf16 <- yesdf(fatal_16ds)
nodf <- function(df) {
ndf <- df[df$duplicate == "no",]
drop <- c("duplicate", "pernum")
ndf = ndf[,!(names(ndf) %in% drop)]
ndf$casestateveh <- paste(ndf$casenum,ndf$statenum,ndf$vehnum, sep = "")
mdf <- data.frame(casenum = numeric(), statenum = numeric(), vehnum = numeric(), persontotal = numeric(),
agemin = numeric(), agemax = numeric(),
numfatal = numeric(), day = numeric(), month = numeric(),
year = numeric(), date = character(), modelyear = numeric(), make = numeric(), cellphoneuse = numeric())
caselist <- unique(ndf$casestateveh)
for (i in caselist) {
cdf <- ndf[ndf$casestateveh == i,]
pt <- length(cdf$casenum)
cr <- cdf
#print(cr)
minage <- cdf$age
maxage <- cdf$age
mdf <- rbind(mdf, data.frame(casenum = cr[1,1], statenum = cr[1,2], vehnum = cr[1,3],
persontotal = pt, agemin = minage, agemax = maxage, numfatal = cr[1,5],
day = cr[1,6], month = cr[1,7], year = cr[1,8], date = cr[1,9],
modelyear = cr[1,10], make = cr[1,11], cellphoneuse = cr[1,12]))
}
return(mdf)
}
nodf16 <- nodf(fatal_16ds)
nodf16na <- nodf(fatal_16nads)
fulldataset <- rbind(yesdf16, nodf16)
fulldatasetna <- rbind(yesdf16na, nodf16na)
tableToCSV <- function(df) {
#df = fulldata
row.names(df)<- NULL
colnames(df) <- c("casenum", "statenum", "vehnum", "persontotal","agemin","agemax","numfatal","day","month",
"year","date","modelyear","make","cellphoneuse")
write.csv(df, file = "fulldataset.csv")
}
tableToCSV(fulldataset)
tableToCSV <- function(df) {
#df = fulldata
row.names(df)<- NULL
colnames(df) <- c("casenum", "statenum", "vehnum", "persontotal","agemin","agemax","numfatal","day","month",
"year","date","modelyear","make","cellphoneuse")
write.csv(df, file = "fulldatasetna.csv")
}
tableToCSV(fulldatasetna)
pullingMakes <- function(df) {
fdf <- df[df$make == 12,]
fdf$makename <- "Ford"
cdf <- df[df$make == 19,]
cdf$makename <- "Cadillac"
mdf <- df[df$make == 42,]
mdf$makename <- "Mercedes"
vdf <- df[df$make == 51,]
vdf$makename <- "Volvo"
rdf <- rbind(fdf,cdf,mdf,vdf)
return(rdf)
}
makedf <- pullingMakes(fatal_16ds)
View(makedf)
makedfna <- pullingMakes(fatal_16nads)
yesnadf <- function(df) {
ydf <- df[df$duplicate == "yes",]
drop <- c("duplicate","pernum")
ydf = ydf[,!(names(ydf) %in% drop)]
ydf$casestateveh <- paste(ydf$casenum,ydf$statenum,ydf$vehnum, sep = "")
ndf <- data.frame(casenum = numeric(), statenum = numeric(), vehnum = numeric(), persontotal = numeric(),
agemin = numeric(), agemax = numeric(),
numfatal = numeric(), day = numeric(), month = numeric(),
year = numeric(), date = character(), modelyear = numeric(), make = numeric(), makename = character(), cellphoneuse = numeric())
caselist <- unique(ydf$casestateveh)
for (i in caselist) {
cdf <- ydf[ydf$casestateveh == i,]
pt <- length(cdf$casenum)
cr <- cdf
drop <- "age"
cr = cr[,!(names(cr) %in% drop)]
cr <- unique(cr)
cdf <- cdf[!is.na(cdf$age),]
if (length(cdf$age) == 0){
minage <- NA
maxage <- NA
} else {
if (length(cdf$age) > 0 & length(cdf$age) < 2) {
minage <- cdf$age
maxage <- cdf$age
}  else {
minage <- min(cdf$age)
maxage <- max(cdf$age)
}
}
ndf <- rbind(ndf, data.frame(casenum = cr[1,1], statenum = cr[1,2], vehnum = cr[1,3],
persontotal = pt, agemin = minage, agemax = maxage, numfatal = cr[1,4],
day = cr[1,5], month = cr[1,6], year = cr[1,7], date = cr[1,8],
modelyear = cr[1,9], make = cr[1,10], makename = cr[1,11],cellphoneuse = cr[1,12]))
}
return(ndf)
}
yesdf16na <- yesnadf(makedf)
View(yesdf16)
View(yesdf16na)
yesdf16na <- yesnadf(makedfna)
yesdf <- function(df) {
ydf <- df[df$duplicate == "yes",]
drop <- c("duplicate","pernum")
ydf = ydf[,!(names(ydf) %in% drop)]
ydf$casestateveh <- paste(ydf$casenum,ydf$statenum,ydf$vehnum, sep = "")
ndf <- data.frame(casenum = numeric(), statenum = numeric(), vehnum = numeric(), persontotal = numeric(),
agemin = numeric(), agemax = numeric(),
numfatal = numeric(), day = numeric(), month = numeric(),
year = numeric(), date = character(), modelyear = numeric(), make = numeric(), makename = character(), cellphoneuse = numeric())
caselist <- unique(ydf$casestateveh)
for (i in caselist) {
cdf <- ydf[ydf$casestateveh == i,]
pt <- length(cdf$casenum)
cr <- cdf
drop <- "age"
cr = cr[,!(names(cr) %in% drop)]
cr <- unique(cr)
minage <- min(cdf$age)
maxage <- max(cdf$age)
ndf <- rbind(ndf, data.frame(casenum = cr[1,1], statenum = cr[1,2], vehnum = cr[1,3],
persontotal = pt, agemin = minage, agemax = maxage, numfatal = cr[1,4],
day = cr[1,5], month = cr[1,6], year = cr[1,7], date = cr[1,8],
modelyear = cr[1,9], make = cr[1,10], makename = cr[1,11], cellphoneuse = cr[1,12]))
}
return(ndf)
}
yesdf16 <- yesdf(makedf)
yesdf <- function(df) {
ydf <- df[df$duplicate == "yes",]
drop <- c("duplicate","pernum")
ydf = ydf[,!(names(ydf) %in% drop)]
ydf$casestateveh <- paste(ydf$casenum,ydf$statenum,ydf$vehnum, sep = "")
ndf <- data.frame(casenum = numeric(), statenum = numeric(), vehnum = numeric(), persontotal = numeric(),
agemin = numeric(), agemax = numeric(),
numfatal = numeric(), day = numeric(), month = numeric(),
year = numeric(), date = character(), modelyear = numeric(), make = numeric(), makename = character(), cellphoneuse = numeric())
caselist <- unique(ydf$casestateveh)
for (i in caselist) {
cdf <- ydf[ydf$casestateveh == i,]
pt <- length(cdf$casenum)
cr <- cdf
drop <- "age"
cr = cr[,!(names(cr) %in% drop)]
cr <- unique(cr)
minage <- min(cdf$age)
maxage <- max(cdf$age)
ndf <- rbind(ndf, data.frame(casenum = cr[1,1], statenum = cr[1,2], vehnum = cr[1,3],
persontotal = pt, agemin = minage, agemax = maxage, numfatal = cr[1,4],
day = cr[1,5], month = cr[1,6], year = cr[1,7], date = cr[1,8],
modelyear = cr[1,9], make = cr[1,10], makename = cr[1,12], cellphoneuse = cr[1,11]))
}
return(ndf)
}
yesdf16 <- yesdf(makedf)
yesnadf <- function(df) {
ydf <- df[df$duplicate == "yes",]
drop <- c("duplicate","pernum")
ydf = ydf[,!(names(ydf) %in% drop)]
ydf$casestateveh <- paste(ydf$casenum,ydf$statenum,ydf$vehnum, sep = "")
ndf <- data.frame(casenum = numeric(), statenum = numeric(), vehnum = numeric(), persontotal = numeric(),
agemin = numeric(), agemax = numeric(),
numfatal = numeric(), day = numeric(), month = numeric(),
year = numeric(), date = character(), modelyear = numeric(), make = numeric(), makename = character(), cellphoneuse = numeric())
caselist <- unique(ydf$casestateveh)
for (i in caselist) {
cdf <- ydf[ydf$casestateveh == i,]
pt <- length(cdf$casenum)
cr <- cdf
drop <- "age"
cr = cr[,!(names(cr) %in% drop)]
cr <- unique(cr)
cdf <- cdf[!is.na(cdf$age),]
if (length(cdf$age) == 0){
minage <- NA
maxage <- NA
} else {
if (length(cdf$age) > 0 & length(cdf$age) < 2) {
minage <- cdf$age
maxage <- cdf$age
}  else {
minage <- min(cdf$age)
maxage <- max(cdf$age)
}
}
ndf <- rbind(ndf, data.frame(casenum = cr[1,1], statenum = cr[1,2], vehnum = cr[1,3],
persontotal = pt, agemin = minage, agemax = maxage, numfatal = cr[1,4],
day = cr[1,5], month = cr[1,6], year = cr[1,7], date = cr[1,8],
modelyear = cr[1,9], make = cr[1,10], makename = cr[1,12],cellphoneuse = cr[1,11]))
}
return(ndf)
}
yesdf16na <- yesnadf(makedfna)
nodf <- function(df) {
ndf <- df[df$duplicate == "no",]
drop <- c("duplicate", "pernum")
ndf = ndf[,!(names(ndf) %in% drop)]
ndf$casestateveh <- paste(ndf$casenum,ndf$statenum,ndf$vehnum, sep = "")
mdf <- data.frame(casenum = numeric(), statenum = numeric(), vehnum = numeric(), persontotal = numeric(),
agemin = numeric(), agemax = numeric(),
numfatal = numeric(), day = numeric(), month = numeric(),
year = numeric(), date = character(), modelyear = numeric(), make = numeric(), makename = character(), cellphoneuse = numeric())
caselist <- unique(ndf$casestateveh)
for (i in caselist) {
cdf <- ndf[ndf$casestateveh == i,]
pt <- length(cdf$casenum)
cr <- cdf
#print(cr)
minage <- cdf$age
maxage <- cdf$age
mdf <- rbind(mdf, data.frame(casenum = cr[1,1], statenum = cr[1,2], vehnum = cr[1,3],
persontotal = pt, agemin = minage, agemax = maxage, numfatal = cr[1,5],
day = cr[1,6], month = cr[1,7], year = cr[1,8], date = cr[1,9],
modelyear = cr[1,10], make = cr[1,11], makename = cr[1,13], cellphoneuse = cr[1,12]))
}
return(mdf)
}
nodf16 <- nodf(makedf)
View(nodf16)
nodf16na <- nodf(makedfna)
fulldataset <- rbind(yesdf16, nodf16)
fulldatasetna <- rbind(yesdf16na, nodf16na)
tableToCSV <- function(df) {
#df = fulldata
row.names(df)<- NULL
colnames(df) <- c("casenum", "statenum", "vehnum", "persontotal","agemin","agemax","numfatal","day","month",
"year","date","modelyear","make","cellphoneuse")
write.csv(df, file = "fulldatasetna.csv")
}
tableToCSV(fulldatasetna)
tableToCSV <- function(df) {
#df = fulldata
row.names(df)<- NULL
colnames(df) <- c("casenum", "statenum", "vehnum", "persontotal","agemin","agemax","numfatal","day","month",
"year","date","modelyear","make","makename","cellphoneuse")
write.csv(df, file = "fulldataset.csv")
}
tableToCSV(fulldataset)
tableToCSV <- function(df) {
#df = fulldata
row.names(df)<- NULL
colnames(df) <- c("casenum", "statenum", "vehnum", "persontotal","agemin","agemax","numfatal","day","month",
"year","date","modelyear","make","makename","cellphoneuse")
write.csv(df, file = "fulldatasetna.csv")
}
tableToCSV(fulldatasetna)
agemakepers <- as.data.frame(cbind.data.frame(df$agemax, df$make, df$persontotal),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
agemakepers <- as.data.frame(cbind.data.frame(fulldataset$agemax, fulldataset$make, fulldataset$persontotal),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
colnames(agemakepers) <- c("agemax","make","persontotal")
View(agemakepers)
lapply(agemakepers$persontotal, sum)
agemake <- as.data.frame(cbind.data.frame(fulldataset$agemax, fulldataset$make),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
colnames(agemakepers) <- c("agemax","make")
unqagemake <- unique(agemake)
View(unqagemake)
tapply(agemakepers$persontotal, c(agemakepers$agemax, agemakepers$make), sum)
aggregate(x = agemakepers$persontotal, by = list(agemakepers$agemax, agemakepers$make), FUN = sum)
aggregate(x = agemakepers, by = list(agemax, make), FUN = sum)
aggregate(x = agemakepers, by = list(agemakepers$agemax, agemakepers$make), FUN = sum)
aggregate(x = agemakepers, by = list(agemakepers$agemax, agemakepers$make, agemakepers$persontotal), FUN = sum)
agemakepers
agemakepers <- as.data.frame(cbind.data.frame(fulldataset$agemax, fulldataset$make, fulldataset$persontotal),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
colnames(agemakepers) <- c("agemax","make","persontotal")
unique(agemakepers$agemax,agemakepers$make)
agemakefun <- function(df) {
ndf <- as.data.frame(cbind.data.frame(fulldataset$agemax, fulldataset$make, fulldataset$persontotal),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
colnames(ndf) <- c("agemax","make","persontotal")
ndf$agemake <- paste(ndf$agemax,ndf$make, sep = "")
drop <- c("agemax","make","persontotal")
mdf= ndf[,!(names(ndf) %in% drop)]
newdf <- data.frame(agemax = numeric(), make = numeric(), persontotal = numeric())
nlist <- unique(mdf)
for (i in nlist) {
cdf <- ndf[ndf$agemake == i,]
pt <- sum(cdf$persontotal)
cr <- cdf
cr <- unique(cr)
newdf <- rbind(ndf, data.frame(agemax = cr[1,1], make = cr[1,2], persontotal = pt))
}
return(newdf)
}
agemakefun(agemakepers)
agemakefun <- function(df) {
ndf <- as.data.frame(cbind.data.frame(df$agemax, df$make, df$persontotal),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
colnames(ndf) <- c("agemax","make","persontotal")
ndf$agemake <- paste(ndf$agemax,ndf$make, sep = "")
drop <- c("agemax","make","persontotal")
mdf= ndf[,!(names(ndf) %in% drop)]
newdf <- data.frame(agemax = numeric(), make = numeric(), persontotal = numeric())
nlist <- unique(mdf)
for (i in nlist) {
cdf <- ndf[ndf$agemake == i,]
pt <- sum(cdf$persontotal)
cr <- cdf
cr <- unique(cr)
newdf <- rbind(ndf, data.frame(agemax = cr[1,1], make = cr[1,2], persontotal = pt))
}
return(newdf)
}
agemakefun(agemakepers)
agemakefun <- function(df) {
ndf <- as.data.frame(cbind.data.frame(df$agemax, df$make, df$persontotal),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
colnames(ndf) <- c("agemax","make","persontotal")
ndf$agemake <- paste(ndf$agemax,ndf$make, sep = "")
drop <- c("agemax","make","persontotal")
mdf= ndf[,!(names(ndf) %in% drop)]
newdf <- data.frame(agemax = numeric(), make = numeric(), persontotal = numeric())
nlist <- unique(mdf)
for (i in nlist) {
cdf <- ndf[ndf$agemake == i,]
pt <- sum(cdf$persontotal)
cr <- cdf
cr <- unique(cr)
p
newdf <- rbind(newdf, data.frame(agemax = cr[1,1], make = cr[1,2], persontotal = pt))
}
return(newdf)
}
agemakefun(agemakepers)
agemakefun <- function(df) {
ndf <- as.data.frame(cbind.data.frame(df$agemax, df$make, df$persontotal),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
colnames(ndf) <- c("agemax","make","persontotal")
ndf$agemake <- paste(ndf$agemax,ndf$make, sep = "")
drop <- c("agemax","make","persontotal")
mdf= ndf[,!(names(ndf) %in% drop)]
newdf <- data.frame(agemax = numeric(), make = numeric(), persontotal = numeric())
nlist <- unique(mdf)
for (i in nlist) {
cdf <- ndf[ndf$agemake == i,]
pt <- sum(cdf$persontotal)
cr <- cdf
cr <- unique(cr)
newdf <- rbind(newdf, data.frame(agemax = cr[1,1], make = cr[1,2], persontotal = pt))
}
return(newdf)
}
agemakefun(agemakepers)
agesumperson <- agemakefun(fulldataset)
agesumperson <- agemakefun(fulldataset)
tableToCSV2 <- function(df) {
#df = fulldata
row.names(df)<- NULL
colnames(df) <- c("agemax","make","persontotal")
write.csv(df, file = "agemakepers.csv")
}
tableToCSV(agesumperson)
View(agesumperson)
tableToCSV2(agesumperson)
